@import '../../variables';

// Button styling variables
$button-margin: 4px;
$button-bolt-color: $base-color-bolt !default;
$button-background-color: $base-color-default !default;
$button-border-color: $base-color-border !default;
$button-active-border-color: $base-color-primary !default;
$button-progress-height: 5px !default;
$button-border-radius: 3px !default;
$button-progress-foreground: $base-color-primary !default;
$button-progress-background: #232b47 !default;
// todo(connor4312): ripples
$button-text-color: #f3f5fd !default;
$button-cost-default-color: #a2a5b0 !default;
$button-cost-unaffordable-color: #fe5353 !default;
$button-cost-background-color: $base-color-default !default;
$button-cost-border-color: $base-color-border !default;
$button-cost-bolt-color: $base-color-bolt !default;
$button-cost-bolt-size: 13px !default;
$button-tooltip-background: #2e354b !default;
$button-font-size: 15px !default;
$button-font-weight: bold !default;
$button-font-shadow: 0 1px 2px rgba(#000, 0.2) !default;
$button-cooldown-spinner-size: 12px !default;

$button-z-base: 0 !default;
$button-z-progress: $button-z-base + 1;
$button-z-cooldown: $button-z-progress + 1;
$button-z-cost: $button-z-cooldown + 1;

// Mixin (used by the spark pill and the button itself) to define base
// background and border colors/styles.
@mixin button-like() {
    border-radius: $button-border-radius;
    background: $button-background-color;
    border: $base-border-width solid $base-color-border;
    transition: border-color $easing-default-duration $easing-default-curve;
}

@keyframes loader-spin {
    0%   { transform: translate(-50%, -50%) rotate(0deg) }
    100% { transform: translate(-50%, -50%) rotate(360deg) }
}

// Styling for the default button control.
.mixer-button {
    @include layout-center-contents();
    @include button-like();

    position: absolute;
    top: $button-margin;
    left: $button-margin;
    right: $button-margin;
    bottom: $button-margin;
    cursor: pointer;
    font-weight: $button-font-weight;
    text-shadow: $button-font-shadow;
    outline: 0 !important;
    z-index: $button-z-base;
    transition: border-color 1s, background-color 0.5s;

    &:hover {
        border-color: $button-active-border-color;

        .mixer-spark-pill:not(.unaffordable) {
            color: $base-color-bolt;
        }
    }

    &:active {
        background-color: lighten($button-background-color, 5%);
        border-color: lighten($button-active-border-color, 40%);
        transition: 0s;
    }

    // The disabled class is applied when the input gets disabled.
    &[disabled] {
        opacity: 0.7;
        cursor: default;

        &:hover {
            border-color: $base-color-border;
        }
    }
}

// A content element is nested in the button and contains the text
// to display in the control.
.mixer-content {
    text-align: center;
    color: $button-text-color;
    font-size: $button-font-size;
    padding: 0 5px;
    max-height: 100%;
}

// Styling for the cooldown that overlays custom controls.
.mixer-cooldown {
    @include layout-center-contents();
    @include absolute-cover();

    min-height: $button-cooldown-spinner-size;
    border-radius: $button-border-radius;
    background: linear-gradient(
        rgba($button-background-color, 0.8),
        rgba(darken($button-background-color, 3%), 1)
    );
    opacity: 0;
    transition: opacity $easing-default-duration $easing-default-curve;
    pointer-events: none;
    z-index: $button-z-cooldown;

    > div {
        text-align: center;
        min-height: $button-cooldown-spinner-size;
        padding-left: $button-cooldown-spinner-size + $base-border-width * 2 + 6px;
        position: relative;
        color: #fff;

        &::before,
        &::after {
            content: '';
            position: absolute;
            left: $button-cooldown-spinner-size / 2;
            top: 50%;
            width: $button-cooldown-spinner-size;
            height: $button-cooldown-spinner-size;
            border-radius: 50%;
            border: $base-border-width solid transparent;
            transform: translate(-50%, -50%);
        }

        &::before {
            border-left-color: $base-color-primary;
            z-index: 0;
            animation: 3s loader-spin infinite linear;
        }

        &::after {
            border-color: rgba(#fff, 0.2);
            z-index: 1;
        }
    }

    &.active {
        opacity: 1;
        pointer-events: auto;
    }
}

// Styling for the button's cost that pops up.
.mixer-spark-pill {
    @include layout-center-contents();
    @include button-like();

    position: absolute;
    left: 50%;
    top: -0.75em;
    transform: translateX(-50%);
    font-weight: $button-font-weight;
    color: $button-cost-default-color;
    line-height: 1.5em;
    font-size: 0.8em;
    padding: 0 8px 0 5px;
    transition: color $easing-default-duration $easing-default-curve;
    z-index: $button-z-cost;

    &:before {
        content: '';
        width: $button-cost-bolt-size;
        height: $button-cost-bolt-size;
        background: url('./static/spark.svg') center center no-repeat;
        background-size: contain;
        display: inline-block;
    }

    &.unaffordable {
        color: $button-cost-unaffordable-color;
    }
}

// Styling for the progress bar that appares under the button when
// the buttons progress is > 0
.mixer-progress-bar {
    @include absolute-cover();
    height: $button-progress-height;
    overflow: hidden;
    top: auto;
    z-index: $button-z-progress;
    border-bottom-left-radius: $button-border-radius - 1;
    border-bottom-right-radius: $button-border-radius - 1;

    &::before,
    > div {
        @include absolute-cover();
    }

    &::before {
        content: '';
        background: $button-progress-background;
        transform: translateY(100%);
        transition: transform $easing-default-duration
    }

    &.enabled::before {
        transform: translateY(0%);
    }

    > div {
        background: $button-progress-foreground;
        transition: transform $easing-default-duration;
    }
}
